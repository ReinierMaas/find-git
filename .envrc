#!/bin/bash

# Add possibility to run a custom envrc that completely overrides the behavior of this envrc.
CUSTOM_ENVRC=.customenvrc
if [ -f "$CUSTOM_ENVRC" ]; then\
  echo "Using .customenvrc file"
  source_env $CUSTOM_ENVRC
else
  # Decrease logging output
  # shellcheck disable=SC2034 # unused variable is still read by direnv.
  DIRENV_LOG_FORMAT=
  # Install nix-direnv, which has an improved implementation of `use nix` that
  # caches the Nix environment. Note that this URL is cached locally, so it
  # doesn't fetch the script every time.
  if ! has nix_direnv_version || ! nix_direnv_version 2.2.0; then
    source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.0/direnvrc" "sha256-5EwyKnkJNQeXrRkYbwwRBcXbibosCJqyIUuz9Xq+LRc="
  fi

  # The `use nix` function prods around in the <nixpkgs> directory, but we don't
  # use that at all, so it may happen that it is not set on a user's PC. Force
  # it to /dev/null.
  NIX_PATH='nixpkgs=/dev/null' use nix

  # Watch an important subset of files that are likely to change the environment
  # upon edit. The trade-off is between not watching too many files on one hand, and
  # having the direnv update when something important changes on the other.
  watch_file nix/sources.json shell.nix
fi
